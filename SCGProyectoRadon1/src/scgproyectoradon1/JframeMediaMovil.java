/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scgproyectoradon1;

import java.util.ArrayList;
import javax.crypto.AEADBadTagException;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel E Guancha
 */
public class JframeMediaMovil extends javax.swing.JFrame {

    /**
     * Creates new form JframeMediaMovil
     */
    

    
    private JframeDatosRadon mainJframeRadon = new JframeDatosRadon();
    private int tipo;
    private int periodos;
 
    /**
     * Cosntructor con parametros iniciales:
     * 
     * @param mainJframeDatosRadon : recibe los parametros de la clase principal
     */
    public JframeMediaMovil(JframeDatosRadon mainJframeDatosRadon) {
        
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.mainJframeRadon = mainJframeDatosRadon ;
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcmb_tipo = new javax.swing.JComboBox<>();
        jtxt_periodos = new javax.swing.JTextField();
        btn_generar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Media Movil");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Calcular Media Movil usando:");

        jcmb_tipo.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jcmb_tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccione--", "Periodos de 15 Minutos", "Periodos en Horas", "Periodos en  Dias" }));

        jtxt_periodos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        btn_generar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btn_generar.setText("Calcular");
        btn_generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generarActionPerformed(evt);
            }
        });

        btn_cancelar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcmb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_cancelar)
                        .addGap(33, 33, 33)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btn_generar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jtxt_periodos, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcmb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_periodos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_generar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generarActionPerformed
        if(validarEntradas()){
            
            CalcularMediaMovil calcularMediaMovil = new CalcularMediaMovil(mainJframeRadon.datos.getDatosRadon(), tipo, periodos);
            mainJframeRadon.cargarDatos(calcularMediaMovil.getDatosMediaMovil(), false, true);
            mainJframeRadon.repaint();
            this.dispose();
            
            
        }
    }//GEN-LAST:event_btn_generarActionPerformed


    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
     this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    protected javax.swing.JButton btn_generar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> jcmb_tipo;
    private javax.swing.JTextField jtxt_periodos;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo para validar las entradas en los campos 
     * @return : retorna verdadero si los campos son coreectos, 
     * de lo contrario retornara false
     */
    private boolean validarEntradas() {
        
        if(jcmb_tipo.getSelectedIndex()> 0 ){
            
            tipo = jcmb_tipo.getSelectedIndex();
            if(jtxt_periodos.getText() != ""){
                
                if(isNumber(jtxt_periodos.getText())){
     
                    periodos= Integer.parseInt(jtxt_periodos.getText());
                    return true;
                }else{
                    
                    JOptionPane.showMessageDialog(null, "El Periodo debe ser un Numero entero positivo");
                    return false;
                }
                
            }else{
                
                JOptionPane.showMessageDialog(null, "El campo Periodo esta vacio");
                return false;
            }
        }else{
            
            JOptionPane.showMessageDialog(null, "Seleccione el tipo de periodo");
            return false;
        }
    }
    
    /**
     * Metodo para determinar el formato de un numero
     * @param num : valor ingresado por el usuario
     * @return : retorna verdadero si el valor es un numero, 
     * de lo contrario retornara falso
     */
    private boolean isNumber(String num){
        try {
            int numero = Integer.parseInt(num);
            
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
        
    
    }
    
 
}
